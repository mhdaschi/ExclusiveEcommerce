<%- include('header-admin') %> 

<main>
    <div class="container mt-5 mb-5">
        <div class="row w-100 mt-5">
            <!-- Total Customers Card -->
            <div class="col-md-3">
                <div class="shadow container bg-white card border-secondary  mx-sm-1 p-3">
                    <div class="shadow container card border-secondary rounded-pill bg-white rounded text-dark p-3 my-card">
                        <i class="fa-solid fa-cart-plus d-flex justify-content-center"></i>
                    </div>
                    <div class="text-dark text-center mt-3">
                        <h4>Total Orders</h4>
                    </div>
                    <div class="text-dark text-center mt-2">
                        <h1><%= TotalOrder %></h1>
                    </div>
                </div>
            </div>
            <!-- Total Revenue Card -->
            <div class="col-md-3">
                <div class="shadow container border-secondary bg-white card  mx-sm-1 p-3">
                    <div class="card border-secondary rounded-pill shadow text-dark p-3 my-card">
                        <i class="fa-solid fa-sack-dollar d-flex justify-content-center"></i>
                    </div>
                    <div class="text-dark text-center mt-3">
                        <h4>Total Revenue</h4>
                    </div>
                    <div class="text-dark text-center mt-2">
                        <h1>â‚¹<%= totalRevenue %></h1>
                    </div>
                </div>
            </div>
            <!-- Total Users Card -->
            <div class="col-md-3">
                <div class="shadow container border-secondary bg-white card  mx-sm-1 p-3">
                    <div class="card border-secondary rounded-pill shadow text-dark p-3 my-card">
                        <i class="fa-solid fa-users d-flex justify-content-center"></i>
                    </div>
                    <div class="text-dark text-center mt-3">
                        <h4>Total Users</h4>
                    </div>
                    <div class="text-dark text-center mt-2">
                        <h1><%= TotalUser %></h1>
                    </div>
                </div>
            </div>
            <!-- Total Products Card -->
            <div class="col-md-3">
                <div class="shadow container border-secondary bg-white card  mx-sm-1 p-3">
                    <div class="card border-secondary rounded-pill shadow text-dark p-3 my-card">
                        <i class="fa-solid fa-shoe-prints d-flex justify-content-center"></i>
                    </div>
                    <div class="text-dark text-center mt-3">
                        <h4>Total Products</h4>
                    </div>
                    <div class="text-dark text-center mt-2">
                        <h1><%= TotalProduct %> </h1>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-around">
      <div style="width: 45%; background-color: #f8f9fa; padding: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); border-radius: 8px;">
          <h2 style="margin-bottom: 20px; font-size: 24px; color: #333;">Sales Chart</h2>
          <!-- Dropdown for selecting period -->
          <div>
              <label for="period">Select Period:</label>
              <select id="period" onchange="updateChart(this.value)">
                  <option value="monthly">Monthly</option>
                  <option value="weekly">Weekly</option>
                  <option value="yearly">Yearly</option>
              </select>
          </div>
          <canvas id="salesChartCanvas" style="max-width: 100%; height: auto;"></canvas>
      </div>

      <!-- Product Inventory Chart -->
      <div style="width: 45%; background-color: #f8f9fa; padding: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); border-radius: 8px;">
          <h2 style="margin-bottom: 20px; font-size: 24px; color: #333;">Product Inventory</h2>
          <canvas id="inventoryGraph" style="max-width: 100%; height: auto;"></canvas>
      </div>
  </div>
</div>

<div class="mt-4 mb-4" style="max-width: 1200px; margin: 0 auto; padding: 20px; background-color: #fff; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);">
    <div style="text-align: center; margin-bottom: 20px;">
        <h3>Sales Report Download</h3>
    </div>
    <div style="display: flex; justify-content: center;">
        <div style="margin-right: 10px;">
            <label style="font-weight: bold; margin-bottom: 5px;" for="startDate">Start Date:</label><br>
            <input style="width: 200px; padding: 8px; border: 1px solid #ccc; border-radius: 4px; margin-bottom: 15px; box-sizing: border-box;" type="date" id="startDate" name="startDate" required>
        </div>
        <div>
            <label style="font-weight: bold; margin-bottom: 5px;" for="endDate">End Date:</label><br>
            <input style="width: 200px; padding: 8px; border: 1px solid #ccc; border-radius: 4px; margin-bottom: 15px; box-sizing: border-box;" type="date" id="endDate" name="endDate" required>
        </div>
    </div>
    <div style="text-align: center; margin-top: 20px;">
        <!-- Add onclick event to the button -->
        <button onclick="downloadSalesReport()" style="padding: 10px; background-color: #d51a20; color: #fff; border: none; border-radius: 4px; cursor: pointer; transition: background-color 0.3s ease;" type="button">Download Report</button>
    </div>
</div>


<div class="col-lg-12 mt-4">
    <div class="card shadow" style="background-color: #fff;">
        <div class="d-flex justify-content-around card-header">

        <h3 class="">Best Products</h3>
        <h3 class="">Best Category</h3>
    </div>
        <div class="card-body d-flex justify-content-around">
            <div class="table-responsive me-3">
                <table class="table table-white table-striped border-0 table-borderless">
                    <thead>
                        <tr>
                            <th class="text-center">Product Image</th>
                            <th class="text-center">Name</th>
                            <th class="text-center">Total Sales</th>
                            <th class="text-center">Price</th>
                            <th class="text-center">Stock</th>
                            <th class="text-center">Status</th>
                            <!-- <th>Sold</th> -->
                        </tr>
                    </thead>
                    <tbody >
                        <% topSellingProducts.forEach(element => { %>
                            <tr>
                                <td class="text-center"><img src="/<%=element.image %>" width="50px" height="50px" alt=""></td>
                                <td class="text-center"><%=element._id %></td>
                                <td class="text-center"><%=element.totalQuantity %></td>
                                <td class="text-center"><%=element.price %></td>
                                <td class="text-center"><%=element.qunt %></td>
                                <td class="<%= element.qunt > 0 ? 'text-success fw-bold' : 'text-danger fw-bold' %> table-white text-center">
                                    <% if (element.qunt > 0) { %>
                                    <% value = 'active'; %>
                                    <% } else { %>
                                    <% value = 'inactive'; %>
                                    <% } %>
                                    <%= value %>
                                  </td>

                            </tr>
                            <% }) %>
                    </tbody>
                </table>
            </div>
            <div class="table-responsive">
                <table class="table table-white table-striped border-0 table-borderless">
                    <thead>
                        <tr>
                            <th class="text-center">Product Image</th>
                            <th class="text-center">Category Name</th>
                            <th class="text-center">Total Sales</th>
                            <th class="text-center">Total Revenue</th>

                            <!-- <th>Sold</th> -->
                        </tr>
                    </thead>
                    <tbody >
                        <% topSellingBrand.forEach(element => { %>
                            <tr>
                                <td class="text-center"><img src="/<%=element.brandImage %>" width="50px" height="50px" alt=""></td>
                                <td class="text-center"><%=element.brandName %></td>
                                <td class="text-center"><%=element.totalQuantity %></td>
                                <td class="text-center"><%=element.Revenue %></td>
          

                            </tr>
                            <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
</main>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Include Chart.js library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>


<!-- Add SweetAlert library -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
    async function downloadSalesReport() {
        var startDateInput = document.getElementById('startDate');
        var endDateInput = document.getElementById('endDate');

        var startDateValue = startDateInput.value;
        var endDateValue = endDateInput.value;

        if (startDateValue === "" || startDateValue > endDateValue) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a valid start date.'
            });
            return;
        }

        if (endDateValue === "" || endDateValue < startDateValue) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a valid end date.'
            });
            return;
        }

        try {
            const response = await fetch('/download-sales-report', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ startDate: startDateValue, endDate: endDateValue })
            });

            if (!response.ok) {
                throw new Error(`Failed to download sales report. Server returned status ${response.status}`);
            }

            // Create Blob object from the response
            const blob = await response.blob();

            // Create object URL
            const url = URL.createObjectURL(blob);

            // Create anchor element
            const a = document.createElement('a');
            a.href = url;
            a.download = 'sales-report.pdf';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);

            // Revoke object URL
            URL.revokeObjectURL(url);
        } catch (error) {
            console.error('Error downloading sales report:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Failed to download sales report. Please try again later.'
            });
        }
    }
</script>




<script>
// Sales Chart Data
const salesData = JSON.parse('<%- JSON.stringify(salesData) %>');


// Sales Chart
const salesCtx = document.getElementById('salesChartCanvas').getContext('2d');
let salesChart; 

function updateChart(period) {
  console.log("Updating chart for period:", period);
  const data = salesData[period];
  if (!data) return; 
  if (salesChart) {
      salesChart.destroy(); 
  }

  let labels = [];
  if (period === 'monthly') {
      labels = ['January', 'February', 'March', 'April','May']; 
  } else if (period === 'weekly') {
      labels = ['Week 1', 'Week 2', 'Week 3', 'Week 4',]; // Example labels for weekly data
  } else if (period === 'yearly') {
      const currentYear = new Date().getFullYear();
      for (let i = currentYear ; i <= currentYear + 4; i++) {
          labels.push(i.toString()); // Add years from 5 years ago to the current year
      }
  }

  salesChart = new Chart(salesCtx, {
      type: 'bar',
      data: {
          labels: labels,
          datasets: [data]
      },
      options: {
          scales: {
              y: {
                  beginAtZero: true
              }
          }
      }
  });
}

// Initialize the chart with monthly data
updateChart('monthly');

// Product Inventory Chart
const inventoryData = JSON.parse('<%- JSON.stringify(inventoryData) %>');
const inventoryCtx = document.getElementById('inventoryGraph').getContext('2d');
new Chart(inventoryCtx, {
  type: 'line',
  data: inventoryData,
  options: {
    scales: {
      x: {
        ticks: {
          // Rotate labels
          callback: function(value, index, ticks) {
            return this.getLabelForValue(value).length > 15 ? this.getLabelForValue(value).substring(0, 15) + '...' : this.getLabelForValue(value);
          }
        },
        title: {
          display: true,
          text: 'Product Names',
          padding: {
            top: 10
          }
        }
      },
      y: {
        beginAtZero: true,
        title: {
          display: true,
          text: 'Quantity'
        }
      }
    },
    plugins: {
      tooltip: {
        callbacks: {
          title: function(tooltipItems) {
            // Display full label in tooltip
            return tooltipItems[0].label;
          }
        }
      }
    }
  }
});

</script>
<%- include('admin_footer') %> <!-- Include the admin footer -->
