
<%- include('header') %>


    <main>
      <div class="container ">
        <div class="main-body ">
    
          <!-- Breadcrumb -->
          <nav aria-label="breadcrumb" class="main-breadcrumb pt-3">
            <ol class="breadcrumb ">
              <li class="breadcrumb-item"><a href="/user/home">Home</a></li>
              <li class="breadcrumb-item active" aria-current="page">User Profile</li>
            </ol>
          </nav>
          <!-- /Breadcrumb -->
    
          <div class="row mt-5">
            <div class="col-md-4 mb-3">
              <div class="card">
                <div class="card-body">
                  <div class="d-flex flex-column align-items-center text-center">
                    <img src="/<%= userData.profilePhoto %>" alt="Profile Pic" class="rounded-circle" style="width: 200px;height: 200px; object-fit: cover;">
                    <div class="d-flex justify-content-center mt-3">
                        <label for="imageInput" class="btn btn-danger btn-rounded">
                          Choose File
                          <input type="file" id="imageInput" name="profileimage" accept="image/*" style="display: none;" onchange="uploadprofiepic(event)">
                        </label>
                      </div>
                    <div class="mt-3">
                      <h4><%=userData.username%></h4>
    
                    </div>
                  </div>
                </div>
    
              </div>
    
            </div>
            <div class="col-md-8">
              <div class="card mb-3">
                <div class="card-body">
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Full Name</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      <%= userData.username %>
                        <!-- Button trigger modal for changing username--------------- -->
    
                        <a href="" class="text-white float-end" data-bs-toggle="modal"
                          data-bs-target="#staticBackdrop">
                          <i class="fa-solid fa-pen-to-square fa-xl" style="color: #000000;"></i>
                                      </a>
    <!---------------------------------Modal for changingg username------------------------------------------->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false"
    tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
   <div class="modal-dialog modal-dialog-centered">
       <div class="modal-content">
           <div class="modal-header border-0">
               <h5 class="modal-title" id="staticBackdropLabel">Edit Profile</h5>
               <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
           </div>
           <form id="nameForm" onsubmit="return usernameValidation();">
               <div class="modal-body">
                   <div class="mb-3">
                       <label for="name" class="form-label">Name</label>
                       <input type="text" class="form-control" name="name" id="username" value="<%=userData.username %>"
                              placeholder="Enter your name">
                   </div>
                   <div class="mb-3">
                    <label for="Phone" class="form-label">Phone Number</label>
                    <input type="number" class="form-control" name="Phone" id="Phone" value="+91<%=userData.Phone %>"
                           placeholder="Enter your Phone Number">
                </div>
                   <div id="usernameWarning" style="color: red;"></div>
               </div>
               <div class="modal-footer border-0">
                   <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                   <button type="submit" class="btn btn-danger">Save Changes</button>
               </div>
           </form>
       </div>
   </div>
</div>
    
                    </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Email</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      <%= userData.email %>
                    </div>
                  </div>
                  <hr>
                  <div class="row">
                    <% if(userData.address &&userData.address.length>0){ %>
                    <div class="col-sm-3">
                      <h6 class="mb-0">Mobile</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                     +91<%=userData.Phone %>
                    </div>
                  
                  <hr>
              
                    <div class="col-sm-3">
                      <h6 class="mb-0">Address</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      <%=userData.address[0].address %>
                    </div>
                    <% }else { %>
                             
                    <div class="col-sm-3">
                      <h6 class="mb-0">Address</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      Address information is not available
                    </div> 
                      
                    <% } %>
                  </div>
                  <hr>
                  <div class="row">
     <!------------------------------------------change password modal --------------------------------------------------------------------->
                    <button type="button" class="btn btn-danger mb-2 w-25" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-whatever="@getbootstrap">Change Password</button>

                  
                  </div>
                  <div class="modal fade" id="exampleModal" style="color: rgb(47, 46, 46)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="exampleModalLabel">Change Password</h1>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="password-form">
                                    <div class="mb-3">
                                        <label for="old-password" class="col-form-label">Old Password:</label>
                                        <input type="password" class="form-control" id="oldPassword">
                                    </div>
                                    <div class="mb-3">
                                        <label for="new-password" class="col-form-label">New Password:</label>
                                        <input type="password" class="form-control" id="newPassword">
                                    </div>
                                    <div class="mb-3">
                                        <label for="confirm-password" class="col-form-label">Confirm Password:</label>
                                        <input type="password" class="form-control" id="confirmPassword">
                                    </div>
                                    <div id="passwordWarning" style="color: red;"></div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-danger" onclick="changePassword()">Change Password</button>
                            </div>
                        </div>
                    </div>
                </div>
                
                </div>
              </div>
            </div>
          </div>
    
          <style>
            
    
            .list-group-item {
              cursor: pointer;
              transition: background-color 0.3s, color 0.3s;
            }
    
            .list-group-item:hover {
              background-color: #f8f9fa;
              color: red;
            }
          </style>
          <div class="card col-md-4 mb-5">
            <div class="card-body p-0">
              <ul class="list-group list-group-flush rounded-3">
                <li class="list-group-item d-flex justify-content-between align-items-center p-3"
                  onclick="window.location.href='/user/orders'">
                  <h6 class="mb-0">My Orders</h6>
                  <i class="fa-solid fa-box-open text-primary"></i>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center p-3"
                  onclick="window.location.href='/user/cart'">
                  <h6 class="mb-0">Cart</h6>
                  <i class="fa-solid fa-cart-shopping"></i>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center p-3"
                  onclick="window.location.href='/user/wallet'">
                  <h6 class="mb-0">Wallet</h6>
                  <i class="fa-solid fa-heart text-danger"></i>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center p-3"
                onclick="window.location.href='/user/coupon'">
                <h6 class="mb-0">Coupon</h6>
                <i class='fa-solid fa-ticket nav_icon'></i>
              </li>
                <li class="list-group-item d-flex justify-content-between align-items-center p-3"
                  onclick="window.location.href='/user-manageAddress'">
                  <h6 class="mb-0">Manage Address</h6>
                  <i class="fa-solid fa-address-book"></i>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center p-3"
                  onclick="window.location.href='/logout'">
                  <h6 class="mb-0">Logout</h6>
                  <i class="fa-solid fa-arrow-right-from-bracket text-danger "></i>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      </main>
      <script
        src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
        crossorigin="anonymous"
      ></script>

      <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
        integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
        crossorigin="anonymous"
      ></script>

  

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script>

function uploadprofiepic(event) {
  const fileInput = event.target;
  if (fileInput.files && fileInput.files[0]) {

    const formData = new FormData();
    formData.append('profileimage', fileInput.files[0]);
    fetch('/user-profileImage', {
      method: 'POST',
      body: formData,
    })
    .then(res => {
      if (res.ok) {
        console.log("File uploaded successfully");
        window.location.reload();
      } else {
        console.error("Upload failed");
      }
    })
    .catch(err => console.error('Error uploading files', err));
  }
}

async function usernameValidation() {
        const nameInput = document.getElementById('username').value.trim();
        const PhoneNumber = document.getElementById('Phone').value.trim();
        const usernameWarning = document.getElementById('usernameWarning');


        let errorMessages = [];

if (nameInput === "") {
    errorMessages.push("Username must be filled out");
}
if (PhoneNumber === "") {
    errorMessages.push("Phone Number must be filled out");
}
if (errorMessages.length > 0) {
    // Show toast notification for the error message
    Toastify({
        text: errorMessages.join(", "),
        duration: 12000, // Duration in milliseconds
        gravity: "top", // Display position: 'top', 'bottom', 'center'
        position: "right", // Toast position: 'left', 'right', 'center'
        close: true, // Whether to show a close button
        backgroundColor: "linear-gradient(to right, #ff416c, #ff4b2b)", // Custom background color
    }).showToast();

    return false;
}

        try {
            const data = {
                username: nameInput,
                Phone:PhoneNumber,
            };
            const response = await fetch('/user/editProfile/name/<%=userData.id %>', {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });

            // Handle the response as needed
            // ...

        } catch (error) {
            console.error(error);
        }

        return true;
    }





    async function changePassword() {
      const oldPasswordInput = document.getElementById('oldPassword');
    const newPasswordInput = document.getElementById('newPassword');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const passwordWarning = document.getElementById('passwordWarning');
    let errorMessages = [];

    if (!oldPasswordInput.value.trim()) {
        errorMessages.push("Old password is required");
    }

    if (!newPasswordInput.value.trim()) {
        errorMessages.push("New password is required");
    }

    if (!confirmPasswordInput.value.trim()) {
        errorMessages.push("Confirm password is required");
    }

    if (newPasswordInput.value !== confirmPasswordInput.value) {
        errorMessages.push("Passwords do not match");
    }

    if (newPasswordInput.value === "") {
        errorMessages.push('Please fill the password');
    }

    if (newPasswordInput.value.length < 8 || !/\d/.test(newPasswordInput.value)) {
        errorMessages.push('Password must be at least 8 characters long and contain at least one numeric digit');
    }


    if (errorMessages.length > 0) {
        passwordWarning.textContent = errorMessages.join(", ");
        return false; 
    }

    passwordWarning.textContent = "";


        try {
            const data = {
                oldPassword: oldPassword,
                newPassword: newPassword,
            };

            const response = await fetch('/user-changePassword', {
                method: "POST",
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });

            const result = await response.json();

            if (result.success) {
                Swal.fire({
                    icon: "success",
                    title: "Password changed Successfully",
                    showConfirmButton: false,
                    timer: 2000,
                }).then(() => {
                    window.location.reload();
                });
                $('#exampleModal').modal('hide');
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Error changing password",
                    text: result.error || "An unexpected error occurred",
                });
            }
        } catch (error) {
            console.error(error);
            passwordWarning.textContent = "An unexpected error occurred";
        }
    }
</script>



      <% include('footer') %>
    </main>
  </body>
</html>
